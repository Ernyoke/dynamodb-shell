command_set = command |
              command_set command

command = simple_command |
          transaction

simple_command = dml_command |
                 ddl_command

transaction = begin_transaction multi_command end_transaction

begin_transaction = BEGIN ';'

end_transaction = END ';'

multi_command = dml_command |
                multi_command dml_command

ddl_command = create_table_command |
              alter_table_command |
              drop_table_command |
              show_command |
              describe_command

dml_command = select_command |
              insert_command |
              update_command |
              delete_command |
              upsert_command |
              replace_command

----------

create_table_command = CREATE TABLE [IF NOT EXISTS] [wait_mode] <table_name>
                       '(' attribute_name_type_list ')'
                       primary_key billing_mode
                       [gsi_list]
                       [lsi_list]
                       [streams_specification]
                       [sse_specification]
                       [table_class] ';'

wait_mode = WAIT | NOWAIT

attribute_name_type = <attribute_name> ',' attribute_type

attribute_type = ATTRIBUTE_TYPE_STRING |
                 ATTRIBUTE_TYPE_NUMBER |
                 ATTRIBUTE_TYPE_BINARY

attribute_name_type_list = attribute_name_type |
                           attribute_name_type_list ',' attribute_name_type

primary_key = PRIMARY KEY '(' partition_key ')' |
              PRIMARY KEY '(' partition_key ',' range_key ) |
              PRIMARY KEY '(' range_key ',' partition_key )

partition_key = <attribute_name> HASH

range_key = <attribute_name> RANGE

billing_mode = BILLING MODE provisioned_mode |
               BILLING MODE PAY_PER_REQUEST

provisioned_mode = '(' positive_integer RCU, positive_integer WCU ')' |
                   '(' positive_integer WCU, positive_integer RCU ')'

gsi_list = gsi | gsi_list gsi

gsi = GSI <index_name> ON '(' attribute_name_type_list ')'
      index_projection [billing_mode]

lsi_list = lsi | lsi_list lsi

lsi = LSI <index_name> ON '(' attribute_name_type_list ')
      index_projection

index_projection = PROJECTING '(' index_projection_specification ')'

index_projection_specification = KEYS_ONLY |
                                 ALL |
                                 INCLUDE index_projection_list

index_projection_list = attribute_name |
                        index_projection_list ',' attribute_name

streams_specification = streams_disabled |
                        streams_enabled

streams_disabled = STREAMS DISABLED

streams_enabled = STREAMS ENABLED stream_type

stream_type = KEYS_ONLY | NEW_IMAGE | OLD_IMAGE | BOTH_IMAGES

sse_specification = SSE DEFAULT |
                    SSE KMS kms_master_key_id

table_class = CLASS STANDARD | CLASS STANDARD_INFREQUENT_ACCESS

----------

alter_table_command = ALTER TABLE [wait_mode] <table_name>
                      SET [billing_mode]
                      [create_index_commands]
                      [update_index_commands]
                      [drop_index_commands]
                      [streams_specification]
                      [sse_specification]
                      [table_class]
                      [create_global_table_commands]
                      [update_global_table_commands]
                      [delete_global_table_commands] ';'

create_index_commands = create_index_commands create_index_command |
                        create_index_command

create_index_command = CREATE gsi

update_index_commands = update_index_commands update_index_command |
                        update_index_command

update_index_command = UPDATE GSI <index_name> billing_mode

drop_index_commands = drop_index_commands drop_index_command |
                      drop_index_command

drop_index_command = DROP GSI <index_name>

global_table_commands = 

----------

drop_table_command = DROP TABLE [IF EXISTS] [wait_mode] <table_name> ';'

----------

show_command = SHOW TABLES ';'

----------

describe_command = DESCRIBE <table_name> ';'

----------

select_command = SELECT [CONSISTENT] attribute_projection_list
                 FROM <table_name>
                 WHERE where_clause
                 [RETURN return_specification]
                 [LIMIT positive_integer] ';'

where_clause = logical_expression

logical_expression = NOT logical_expression |
                     '(' logical_expression ')' |
                     logical_expression logical_operation logical_expression |
                     comparison_expression |
                     between_expression |
                     in_expression |
                     logical_function

return_specification = RETURN return_type

return_type = INDEXES | TOTAL | NONE

logical_operation = AND | OR

comparison_expression = operand comparison_operator operand

between_expression = operand BETWEEN operand AND operand

in_expression = operand IN '(' in_list ')'

in_list = rvalue | in_list ',' rvalue

operand = <attribute_name> | rvalue

rvalue = numeric_value |
         string_value |
         binary_value

numeric_value = integer_value |
                floating_point_value |
                numeric_function

integer_value = positive_integer |
                '-' positive_integer

positive_integer = [1-9]*[0-9]

floating_point_value = [0-9]*\.[0-9]+

string_value = '"' .* '"'

binary_value = 'b' string_value

logical_function = ATTRIBUTE_EXISTS '(' <attribute_name> ')' |
                   ATTRIBUTE_NOT_EXISTS '(' <attribute_name> ')' |
                   ATTRIBUTE_TYPE '(' <attribute_name> ',' attribute_type ')' |
                   BEGINS_WITH '(' <attribute_name>, string_value ')' |
                   CONTAINS '(' <attribute_name>, string_value ')'

numeric_function = SIZE '(' <attribute_name> ')'
